@startuml
title Auth Logical Design
!include http://plantuml.wansong.vip/plugins/DatabaseLogical.iuml


Table(auth_identity, AuthIdentity, User identity) {
	primary()
	username, string(30)
	gender gender
	birthday date
	marital_status marital_status
}
note right of auth_identity
Corresponding to each human being ideally.
Actually each human being can have more than one ways of signup/signin.
Planning to support merging of identities into one.
end note

Table(auth_signup, AuthSignup, Way of signup) {
	primary()
	not_null(identity_id, int(64))
  not_null(auth_type, auth_type)
  not_null(auth_id, string(128))
	not_null(credential, string(30))
	source string(32) // for marketing
  idx2(auth_type, auth_id)
}
onemany(auth_identity, auth_signup, 'Identity can be authed by many different ways of signup')
note right of auth_signup
Corresponding to each source of identity authentication.
end note


Table(auth_signup_verify, AuthSignupVerify, session for signup) {
	primary()
  not_null(auth_type, auth_type)
  not_null(auth_status, auth_status)
  not_null(auth_id, string(128))
	not_null(code, string(6))
}

Table(auth_signin_session, AuthSigninSession, session for signin) {
	primary()
	not_null(signup_id, int(l=64))
	not_null(token, string(64))
}
onemany(auth_signup, auth_signin_session,'signin session')
note right on link
A one to many
end note

Type(gender, Gender) {
	MALE
	FEMALE
	OTHER
}
depends(auth_identity, gender, gender)


Type(marital_status, MaritalStatus) {
	SINGLE
	MARRIED
	DIVORCED
	SEPARATED
	WIDOWED
	OTHER
}
depends(auth_identity, marital_status, MaritalStatus)

Type(auth_status, AuthStatus) {
	OK
	PENDING
}
depends(auth_signup, auth_status, AuthStatus)

Type(auth_type, AuthType) {
	EMAIL
	WECHAT
  Mobile
}
depends(auth_signup, auth_type, AuthType)
@enduml